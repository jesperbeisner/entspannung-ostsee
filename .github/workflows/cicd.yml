name: "CI/CD"

on:
    push:
        branches:
            - master
            - develop
    pull_request:
        branches:
            - master
            - develop

jobs:
    qa:
        name: "QA"
        runs-on: ubuntu-latest

        steps:
            -   name: "Checkout"
                uses: actions/checkout@v4

            -   name: "Setup PHP"
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "8.2"
                    ini-values: "memory_limit=-1"
                    tools: composer

            -   name: "Setup npm"
                uses: actions/setup-node@v3
                with:
                    node-version: 20

            -   name: "Setup .env"
                run: mv .env.example .env

            -   name: "Install npm dependencies"
                run: npm clean-install

            -   name: "Build npm dependencies"
                run: npm run build

            -   name: "Install composer dependencies"
                run: composer install

            -   name: "Generate app key"
                run: php artisan key:generate

            -   name: "Run PHP-CS-Fixer"
                run: vendor/bin/php-cs-fixer fix --diff --verbose

            -   name: "Run PHPStan"
                run: vendor/bin/phpstan analyze

            -   name: "Run PHPUnit"
                run: vendor/bin/phpunit

    build:
        name: "Build"
        runs-on: ubuntu-latest
        needs: qa
        if: github.ref == 'refs/heads/master'

        steps:
            -   name: "Checkout"
                uses: actions/checkout@v4

            -   name: "Create git commit file"
                run: git rev-parse HEAD > commit.txt

            -   name: "Set docker meta"
                id: meta
                uses: docker/metadata-action@v4
                with:
                    images: "ghcr.io/jesperbeisner/entspannung-ostsee"

            -   name: "Login to image repository"
                uses: docker/login-action@v2
                with:
                    registry: "ghcr.io"
                    username: ${{ github.actor }}
                    password: ${{ secrets.GHCR_TOKEN }}

            -   name: "Build and push"
                uses: docker/build-push-action@v3
                with:
                    context: .
                    file: ".docker/prod/Dockerfile"
                    push: true
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}

    deploy:
        name: "Deploy"
        runs-on: ubuntu-latest
        needs: build
        if: github.ref == 'refs/heads/master'

        steps:
            -   name: "Deploy"
                uses: appleboy/ssh-action@v1.0.0
                with:
                    host: ${{ secrets.HOST }}
                    username: ${{ secrets.USERNAME }}
                    password: ${{ secrets.PASSWORD }}
                    script: |
                        cd /var/www/entspannung-ostsee
                        docker rm -f entspannung-ostsee
                        docker rmi -f ghcr.io/jesperbeisner/entspannung-ostsee:master
                        docker run -d -p 9999:8080 --env-file .env --name entspannung-ostsee ghcr.io/jesperbeisner/entspannung-ostsee:master
                        docker exec entspannung-ostsee touch database/database/db.sqlite
                        docker exec entspannung-ostsee php artisan migrate --force
                        docker exec entspannung-ostsee php artisan optimize
                        docker exec entspannung-ostsee php artisan config:cache
                        docker exec entspannung-ostsee php artisan route:cache
                        docker exec entspannung-ostsee php artisan view:cache
                        docker exec entspannung-ostsee php artisan app:create-user test@example.com Password123
